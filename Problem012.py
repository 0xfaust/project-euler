'''
Project Euler Problem 12: Highly divisible triangular number

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

Answer: 76576500
https://projecteuler.net/problem=12
'''
#!/usr/bin/env python3
def divisor_calc(x):
    if x % 2 == 0: x = x/2
    divisors = 1
    ct = 0
    while x % 2 == 0:
        ct += 1
        x = x/2
    divisors = divisors * (ct + 1)
    y = 3
    while x != 1:
        ct = 0
        while x % y == 0:
            ct += 1
            x = x/y
        divisors = divisors * (ct + 1)
        y += 2
    return divisors
 
def find_index(factor_limit):
    x = 1
    a, b = divisor_calc(x), divisor_calc(x+1)
    while a * b < 500:
        x += 1
        a, b = b, divisor_calc(x+1)
    return x
    
index = find_index(500)
triangle = (index * (index + 1)) / 2

print (triangle)
